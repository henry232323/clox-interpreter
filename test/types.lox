var a: Number = 5
var b: String | Number = "asd"
var d: Atom = :asd
var c: (Number) => Number = fun (x: Number): Number => { return x + 1; }
var l: List<List<Number>> = [[1,2],[3,4]]
println(l[1])

interface MyInterface {
    myfunc(a: Number, b: String)
}

class MyClass {
    myfunc(a: Number, b: String) {
        println(a)
        println(b)
    }
}

var my_var: MyInterface = MyClass()
my_var.myfunc(5, "WOW!")

fun myfunc<T>(a: T): T {
    return a
}

fun myfunc<T extends MyInterface>(a: T, b: List<T>): T {
    println(b)
    a.myfunc(1, "ASD")
    return a
}

myfunc(my_var, [my_var])
